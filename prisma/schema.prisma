generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

// Model definitions

model User {
  id Int @id @default(autoincrement())
  nickname String @unique
  password String

  requested FriendRequest[] @relation("me")
  requestedBy FriendRequest[] @relation("friend")

  friends Friend[] @relation("me")
  befriendedBy Friend[] @relation("friend")
  
  // groups Members[] // m-n with Group
  // groupInvitations GroupInvitations[]
  // groupMessages GroupMessage[]
  // messagedBy DirectMessages[] @relation("receiver")
  // messaged DirectMessages[] @relation("sender")
  @@map("users")
}

model FriendRequest {
  me User @relation("me", fields: [meId], references: [id])
  meId Int @map("me_id")
  friend User @relation("friend", fields: [friendId], references: [id])
  friendId Int @map("friend_id")
  status FRequestStatus @default(SENT)
  @@id([meId, friendId])
  @@map("friend_requests")
}

enum FRequestStatus {
  SENT
  ACCEPTED
  REJECTED
}

model Friend {
  me User @relation("me", fields: [meId], references: [id])
  meId Int @map("me_id")
  friend User @relation("friend", fields: [friendId], references: [id])
  friendId Int @map("friend_id")
  @@id([meId, friendId])
  @@map("friends")
}

// model Group {user
//   id Int @id @default(autoincrement())
//   name String
//   members Members[]
//   invitedUsers GroupInvitations[]
//   messages GroupMessage[]
//   @@map("groups")
// }

// model GroupMessage {
//   id Int @id @default(autoincrement())
//   text_content String
//   sender User @relation(fields: [sender_id], references: [id])
//   sender_id Int
//   group Group @relation(fields: [group_id], references: [id])
//   group_id Int
//   @@map("group_messages")
// }

// User-Group join table
// model Members {
//   user User @relation(fields: [user_id], references: [id])
//   user_id Int
//   group Group @relation(fields: [group_id], references: [id])
//   group_id Int
//   is_admin Boolean @default(false)
//   @@id([user_id, group_id])
//   @@map("members")
// }

// model GroupInvitations {
//   group Group @relation(fields: [group_id], references: [id])
//   group_id Int
//   user User @relation(fields: [user_id], references: [id])
//   user_id Int
//   @@id([group_id, user_id])
//   @@map("group_invitations")
// }

// model DirectMessages {
//   id Int @id @default(autoincrement())
//   text_content String
//   sender User @relation("sender", fields: [sender_id], references: [id])
//   sender_id Int
//   receiver User @relation("receiver", fields: [receiver_id], references: [id])
//   receiver_id Int
//   @@map("direct_messages")
// }

